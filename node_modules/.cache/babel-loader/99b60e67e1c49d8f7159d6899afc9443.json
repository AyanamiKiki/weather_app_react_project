{"ast":null,"code":"var _jsxFileName = \"/Users/anika/Desktop/stuff/kodowanko/weather_app_react_project/src/WeatherForecast.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport WeatherIcon from \"./WeatherIcon\";\nimport \"./WeatherForecast.css\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function WeatherForecast(props) {\n  _s();\n\n  let [loaded, setLoaded] = useState(false);\n  let [forecast, setForecast] = useState(null);\n\n  function handleResponse(response) {\n    console.log(response.data);\n    setForecast(response.data);\n  }\n\n  if (loaded) {\n    let apiKey = \"b4407213e455b1634cc61a84e0b730a1\";\n    let longitude = props.coordinates.lon;\n    let latitude = props.coordinates.lat;\n    let apiUrl = `https://api.openweathermap.org/data/2.5/onecall?lat=${latitude}&lon=${longitude}&appid=${apiKey}&units=metric`;\n    axios.get(apiUrl).then(handleResponse);\n    return null;\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"WeatherForecast\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"weatherForecastDay\",\n            children: \"Thursday\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(WeatherIcon, {\n            code: \"01d\",\n            size: 40\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"weatherForecastTemp\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"weatherForecastTemp-max\",\n              children: \"19\\xB0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"weatherForecastTemp-min\",\n              children: \"10\\xB0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }, this);\n  }\n}\n\n_s(WeatherForecast, \"20/pdcvQnLtcZUd5Lz9vhTDggVQ=\");\n\n_c = WeatherForecast;\n\nvar _c;\n\n$RefreshReg$(_c, \"WeatherForecast\");","map":{"version":3,"sources":["/Users/anika/Desktop/stuff/kodowanko/weather_app_react_project/src/WeatherForecast.js"],"names":["React","useState","WeatherIcon","axios","WeatherForecast","props","loaded","setLoaded","forecast","setForecast","handleResponse","response","console","log","data","apiKey","longitude","coordinates","lon","latitude","lat","apiUrl","get","then"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAO,uBAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,eAAe,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAAA;;AAC7C,MAAI,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,KAAD,CAAlC;AACA,MAAI,CAACO,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,IAAD,CAAtC;;AAEA,WAASS,cAAT,CAAwBC,QAAxB,EAAkC;AAChCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;AACAL,IAAAA,WAAW,CAACE,QAAQ,CAACG,IAAV,CAAX;AACD;;AAED,MAAIR,MAAJ,EAAW;AACT,QAAIS,MAAM,GAAG,kCAAb;AACA,QAAIC,SAAS,GAAGX,KAAK,CAACY,WAAN,CAAkBC,GAAlC;AACA,QAAIC,QAAQ,GAAGd,KAAK,CAACY,WAAN,CAAkBG,GAAjC;AACA,QAAIC,MAAM,GAAI,uDAAsDF,QAAS,QAAOH,SAAU,UAASD,MAAO,eAA9G;AAEAZ,IAAAA,KAAK,CAACmB,GAAN,CAAUD,MAAV,EAAkBE,IAAlB,CAAuBb,cAAvB;AAEA,WAAO,IAAP;AACD,GATD,MASO;AACR,wBACG;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA,kCACA;AAAK,YAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,eAEA,QAAC,WAAD;AAAa,YAAA,IAAI,EAAC,KAAlB;AAAwB,YAAA,IAAI,EAAE;AAA9B;AAAA;AAAA;AAAA;AAAA,kBAFA,eAGA;AAAK,YAAA,SAAS,EAAC,qBAAf;AAAA,oCACI;AAAM,cAAA,SAAS,EAAC,yBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAM,cAAA,SAAS,EAAC,yBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADH;AAcE;AAEF;;GAnCuBN,e;;KAAAA,e","sourcesContent":["import React, { useState } from \"react\";\nimport WeatherIcon from \"./WeatherIcon\";\nimport \"./WeatherForecast.css\";\nimport axios from \"axios\";\n\nexport default function WeatherForecast(props) {\n  let [loaded, setLoaded] = useState(false);\n  let [forecast, setForecast] = useState(null);\n\n  function handleResponse(response) {\n    console.log(response.data);\n    setForecast(response.data);\n  }\n   \n  if (loaded){\n    let apiKey = \"b4407213e455b1634cc61a84e0b730a1\";\n    let longitude = props.coordinates.lon;\n    let latitude = props.coordinates.lat;\n    let apiUrl = `https://api.openweathermap.org/data/2.5/onecall?lat=${latitude}&lon=${longitude}&appid=${apiKey}&units=metric`;\n\n    axios.get(apiUrl).then(handleResponse);\n\n    return null;\n  } else {\n return (\n    <div className=\"WeatherForecast\">\n        <div className=\"row\">\n            <div className=\"col-2\"> \n            <div className=\"weatherForecastDay\">Thursday</div>\n            <WeatherIcon code=\"01d\" size={40} />\n            <div className=\"weatherForecastTemp\">\n                <span className=\"weatherForecastTemp-max\">19°</span>\n                <span className=\"weatherForecastTemp-min\">10°</span>\n            </div>\n            </div>\n        </div>\n    </div>\n)\n  }\n   \n}"]},"metadata":{},"sourceType":"module"}
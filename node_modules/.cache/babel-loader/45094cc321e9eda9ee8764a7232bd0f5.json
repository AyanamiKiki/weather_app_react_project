{"ast":null,"code":"var _jsxFileName = \"/Users/anika/Desktop/stuff/kodowanko/weather_app_react_project/src/WeatherForecast.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport \"./WeatherForecast.css\";\nimport WeatherForecastDay from \"./WeatherForecastDay\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function WeatherForecast(props) {\n  _s();\n\n  let [loaded, setLoaded] = useState(false);\n  let [forecast, setForecast] = useState(null);\n  useEffect(() => {\n    setLoaded(false);\n  }, [props.coordinates]);\n\n  function handleResponse(response) {\n    setForecast(response.data.daily);\n    setLoaded(true);\n  }\n\n  if (loaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"WeatherForecast\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: forecast.map(function (dailyForecast, index) {\n          if (index < 6) {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col\",\n              children: /*#__PURE__*/_jsxDEV(WeatherForecastDay, {\n                data: dailyForecast\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 27,\n                columnNumber: 17\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 17\n            }, this);\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }, this);\n  } else {\n    let apiKey = \"b4407213e455b1634cc61a84e0b730a1\";\n    let longitude = props.coordinates.lon;\n    let latitude = props.coordinates.lat;\n    let apiUrl = `https://api.openweathermap.org/data/2.5/onecall?lat=${latitude}&lon=${longitude}&appid=${apiKey}&units=metric`;\n    axios.get(apiUrl).then(handleResponse);\n    return null;\n  }\n}\n\n_s(WeatherForecast, \"kLNsBjMbwg/21mEy29QJZwMPCGo=\");\n\n_c = WeatherForecast;\n\nvar _c;\n\n$RefreshReg$(_c, \"WeatherForecast\");","map":{"version":3,"sources":["/Users/anika/Desktop/stuff/kodowanko/weather_app_react_project/src/WeatherForecast.js"],"names":["React","useState","useEffect","WeatherForecastDay","axios","WeatherForecast","props","loaded","setLoaded","forecast","setForecast","coordinates","handleResponse","response","data","daily","map","dailyForecast","index","apiKey","longitude","lon","latitude","lat","apiUrl","get","then"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,uBAAP;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,eAAe,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAAA;;AAC7C,MAAI,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,KAAD,CAAlC;AACA,MAAI,CAACQ,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,IAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACfM,IAAAA,SAAS,CAAC,KAAD,CAAT;AACA,GAFQ,EAEN,CAACF,KAAK,CAACK,WAAP,CAFM,CAAT;;AAIA,WAASC,cAAT,CAAwBC,QAAxB,EAAkC;AAChCH,IAAAA,WAAW,CAACG,QAAQ,CAACC,IAAT,CAAcC,KAAf,CAAX;AACAP,IAAAA,SAAS,CAAC,IAAD,CAAT;AACD;;AAED,MAAID,MAAJ,EAAW;AACR,wBACD;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,kBACKE,QAAQ,CAACO,GAAT,CAAa,UAASC,aAAT,EAAwBC,KAAxB,EAA8B;AAC1C,cAAIA,KAAK,GAAG,CAAZ,EAAc;AACZ,gCACA;AAAK,cAAA,SAAS,EAAC,KAAf;AAAA,qCACA,QAAC,kBAAD;AAAoB,gBAAA,IAAI,EAAED;AAA1B;AAAA;AAAA;AAAA;AAAA;AADA,eAA0BC,KAA1B;AAAA;AAAA;AAAA;AAAA,oBADA;AAKD;AACD,SARD;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADC;AAiBF,GAlBD,MAkBO;AACL,QAAIC,MAAM,GAAG,kCAAb;AACA,QAAIC,SAAS,GAAGd,KAAK,CAACK,WAAN,CAAkBU,GAAlC;AACA,QAAIC,QAAQ,GAAGhB,KAAK,CAACK,WAAN,CAAkBY,GAAjC;AACA,QAAIC,MAAM,GAAI,uDAAsDF,QAAS,QAAOF,SAAU,UAASD,MAAO,eAA9G;AAEAf,IAAAA,KAAK,CAACqB,GAAN,CAAUD,MAAV,EAAkBE,IAAlB,CAAuBd,cAAvB;AAEA,WAAO,IAAP;AACD;AAEF;;GA1CuBP,e;;KAAAA,e","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./WeatherForecast.css\";\nimport WeatherForecastDay from \"./WeatherForecastDay\";\nimport axios from \"axios\";\n\nexport default function WeatherForecast(props) {\n  let [loaded, setLoaded] = useState(false);\n  let [forecast, setForecast] = useState(null);\n\n  useEffect(() => {\n   setLoaded(false);\n  }, [props.coordinates])\n\n  function handleResponse(response) {\n    setForecast(response.data.daily);\n    setLoaded(true);\n  }\n   \n  if (loaded){\n     return (\n    <div className=\"WeatherForecast\">\n        <div className=\"row\">\n            {forecast.map(function(dailyForecast, index){\n              if (index < 6){\n                return(\n                <div className=\"col\" key={index}> \n                <WeatherForecastDay data={dailyForecast} /> \n                </div>\n              );\n              }\n             })}\n            \n        </div>\n    </div>\n)\n    \n  } else {\n    let apiKey = \"b4407213e455b1634cc61a84e0b730a1\";\n    let longitude = props.coordinates.lon;\n    let latitude = props.coordinates.lat;\n    let apiUrl = `https://api.openweathermap.org/data/2.5/onecall?lat=${latitude}&lon=${longitude}&appid=${apiKey}&units=metric`;\n\n    axios.get(apiUrl).then(handleResponse);\n\n    return null;\n  }\n   \n}"]},"metadata":{},"sourceType":"module"}